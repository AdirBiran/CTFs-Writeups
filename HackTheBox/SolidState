# SolidState

## Basic Information

|          |  |
| :---                 |     :---:      |
| Machine Name         | SolidState     |
| Written by           | Adir Biran       |
| IP Address           | 10.10.10.51       |
| Tools and Techniques |        |

## Method



## Enumeration

<p align="center">
</p>

#### Nmap

*1
<p align="center">
</p>

nmap all ports
*2
<p align="center">
</p>

gobuster
*3
<p align="center">
</p>

gobuster with txt and php files
*4
<p align="center">
</p>

website
*5
<p align="center">
</p>

assets
*6
<p align="center">
</p>

images
*7
<p align="center">
</p>

README.txt
*8
<p align="center">
</p>

LICENSE.txt
*9
<p align="center">
</p>

metasploit search james
*10
<p align="center">
</p>

searchsploit james
*11
<p align="center">
</p>

trying exploit - but someone needs to log in
the content of the exploit revealed default credentials for james tool.
root:root
*12
<p align="center">
</p>

exploring the services on ports 110, 119, 4555
*13
<p align="center">
</p>

port 110 - POP3

port 119 - NNTP

port 4555 - james remote administration tools
default credentials: root:root
*14
<p align="center">
</p>

list of commands:
*15
<p align="center">
</p>

listusers
*16
<p align="center">
</p>

setting password "pass" for all users
setpassword james pass
setpassword thomas pass
setpassword john pass
setpassword mindy pass
setpassword mailadmin pass
*17
<p align="center">
</p>

with the help of this article on the pop commands:
https://www.atmail.com/blog/pop-101-manual-pop-sessions/

we will login to each of the users with the "pass" password and read the emails on port 110.
user james
pass pass
list (to list all mails)
retr <X> command to retrieve specific mail

james
*18
<p align="center">
</p>

thomas
*19
<p align="center">
</p>

john
*20
<p align="center">
</p>

john's mail
*21
<p align="center">
</p>

mindy
*22
<p align="center">
</p>

mindy's first mail
*23
<p align="center">
</p>

mindy's second mail
*24
<p align="center">
</p>

mindy's credentials found
mindy:P@55W0rd1!2@

mailadmin
*25
<p align="center">
</p>

trying the credentials for the ssh service
*26
<p align="center">
</p>

we're in as mindy

however, we're in a restricted bash, meaning many commands will not work.
*27
<p align="center">
</p>

following this article about escaping restricted bash
https://www.hacknos.com/rbash-escape-rbash-restricted-shell-escape/
ssh mindy@10.10.10.51 -t "bash --noprofile"
*28
<p align="center">
</p>

users on the machine
*29
<p align="center">
</p>

sudo -l
*30
<p align="center">
</p>

suid files
*31
<p align="center">
</p>

after more enumeration, looking in the home directories, var, logs, backups etc,
found inside /opt directory
*32
<p align="center">
</p>

after thinking for a while on how to target these files easily,
constructed the following command:
find /  -type f -perm /002-name "*.py" 2>/dev/null
looking inside the machine's root directory (/) for any file (-type f) with the world writeable permission (-perm /002) and python extension (-name "*.py), redirecting errors to null (2>/dev/null).
*33
<p align="center">
</p>

the content of tmp.py
*34
<p align="center">
</p>

as we can see, the script deletes the content of /tmp directory.
we can assume there is a cron job running, but to make sure we will create a file in /tmp directory, monitor the time and check if it gets deleted.
*35
<p align="center">
</p>

as we can see, the file got deleted.
after exploring it a bit more, apparently the script runs every 3 minutes.
let's modify it to get a root shell.
*36
<p align="center">
</p>

when the script will be executed by a cron job, it will add a SUID on /bin/bash, allowing us to launch a root shell.
confirm the SUID bit is set
*37
<p align="center">
</p>

get a root shell.
*38
<p align="center">
</p>

and we're root.
